<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <sec:http pattern="/logout" security="none"/>
    <sec:http pattern="/login_error.jsp" security="none"/>
    <sec:http pattern="/resources/**" security="none"/>
    <sec:http pattern="/favicon.ico" security="none"/>

    <sec:authentication-manager alias="authenticationManager"/>

    <!--define an oauth 2 resource for api access -->
    <oauth:resource id="uaa" type="authorization_code" client-id="${appClientId}"
                    client-secret="${appClientSecret}"
                    access-token-uri="${accessTokenUri}" user-authorization-uri="${userAuthorizationUri}"/>

    <oauth:web-expression-handler id="oauthWebExpressionHandler"/>

    <!--apply the oauth client context -->
    <oauth:client id="oauth2ClientFilter"/>

    <oauth:rest-template id="restTemplate" resource="uaa"/>

    <http pattern="/apps.*" request-matcher="regex" xmlns="http://www.springframework.org/schema/security"
          entry-point-ref="loginEntryPoint" disable-url-rewriting="true" use-expressions="true"
          authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/apps.*" access="hasRole('cloud_controller.read')"/>
        <anonymous enabled="false"/>
        <custom-filter ref="oauth2ClientFilter" before="PRE_AUTH_FILTER"/>
        <custom-filter ref="accessTokenFilter" position="PRE_AUTH_FILTER"/>
    </http>

    <http xmlns="http://www.springframework.org/schema/security" entry-point-ref="loginEntryPoint"
          disable-url-rewriting="true" use-expressions="true" authentication-manager-ref="authenticationManager"
          security-context-repository-ref="securityContextRepository">
        <intercept-url pattern="/**" access="isFullyAuthenticated()"/>
        <logout logout-success-url="/logout"/>
        <anonymous enabled="false"/>
        <custom-filter ref="oauth2ClientFilter" before="PRE_AUTH_FILTER"/>
        <custom-filter ref="socialClientFilter" position="PRE_AUTH_FILTER"/>
    </http>

    <bean id="securityContextRepository"
          class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
        <property name="springSecurityContextKey" value="SOCIAL_SPRING_SECURITY_CONTEXT"/>
    </bean>

    <bean id="oauth2AuthenticationManager"
          class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager">
        <property name="tokenServices" ref="remoteTokenServices"/>
    </bean>

    <bean id="remoteTokenServices" class="org.cloudfoundry.identity.uaa.oauth.RemoteTokenServices">
        <property name="checkTokenEndpointUrl" value="${checkTokenUrl}"/>
        <property name="clientId" value="${appClientId}"/>
        <property name="clientSecret" value="${appClientSecret}"/>
    </bean>

    <bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/login_error.jsp"/>
    </bean>

    <bean id="socialClientFilter" class="org.cloudfoundry.identity.uaa.client.ClientAuthenticationFilter">
        <constructor-arg value="/login"/>
        <property name="preAuthenticatedPrincipalSource">
            <bean class="org.cloudfoundry.identity.uaa.client.SocialClientUserDetailsSource">
                <property name="restTemplate" ref="restTemplate"/>
                <property name="userInfoUrl" value="${userInfoUri}"/>
            </bean>
        </property>
    </bean>

    <bean id="accessTokenFilter" class="org.cloudfoundry.identity.uaa.client.ClientAuthenticationFilter">
        <constructor-arg value="/login"/>
        <property name="authenticationManager" ref="oauth2AuthenticationManager"/>
        <property name="preAuthenticatedPrincipalSource">
            <bean class="org.cloudfoundry.identity.uaa.client.OAuth2AccessTokenSource">
                <property name="restTemplate" ref="restTemplate"/>
            </bean>
        </property>
    </bean>

</beans>